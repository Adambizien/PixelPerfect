---
export interface FAQItem {
  question: string;
  answer: string;
}

interface Props {
  faqItems: FAQItem[];
  title?: string;
  description?: string;
}

const { faqItems, title = "Frequently Asked Questions", description = "Find answers to common questions about our product or service." } = Astro.props;
---

<div class="max-w-3xl mx-auto px-4 py-12 sm:px-6 lg:px-8">
  <div class="text-center mb-12">
    <h2 class="text-3xl font-extrabold text-gray-900 sm:text-4xl">{title}</h2>
    <p class="mt-4 text-lg text-gray-600">{description}</p>
  </div>

  <div class="space-y-6" id="faq-accordion">
    {
      faqItems.map((item, index) => (
        <div class="border border-gray-200 rounded-lg overflow-hidden transition-all duration-200 hover:border-gray-300">
          <button
            class="w-full px-6 py-4 text-left focus:outline-none faq-toggle"
            aria-expanded="false"
            aria-controls={`faq-answer-${index}`}
            id={`faq-question-${index}`}
          >
            <div class="flex items-center justify-between">
              <h3 class="text-lg font-medium text-gray-900">{item.question}</h3>
              <svg
                class="w-5 h-5 text-gray-500 transition-transform duration-200 transform"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </div>
          </button>
          <div
            class="px-6 pb-4 hidden"
            id={`faq-answer-${index}`}
            aria-labelledby={`faq-question-${index}`}
          >
            <p class="text-gray-600">{item.answer}</p>
          </div>
        </div>
      ))
    }
  </div>
</div>

<style is:global>
  .faq-answer {
    transition: all 0.3s ease;
    overflow: hidden;
  }
</style>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const toggles = document.querySelectorAll('.faq-toggle');
  
  toggles.forEach(toggle => {
    toggle.addEventListener('click', () => {
      const answerId = toggle.getAttribute('aria-controls');
      const answer = document.getElementById(answerId);
      const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
      
      answer.classList.toggle('hidden');

      const arrow = toggle.querySelector('svg');
      arrow.classList.toggle('rotate-180');

      toggle.setAttribute('aria-expanded', !isExpanded);
    });
  });
});
</script>