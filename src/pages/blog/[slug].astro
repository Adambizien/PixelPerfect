---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const articles = await getCollection('blog');
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await article.render();
---

<Layout title={`${article.data.title} | Blog`}>
    <article class="max-w-3xl mx-auto px-4 py-12">
        <a href="/blog" class="group inline-flex items-center font-medium text-purple-600 hover:text-purple-800 dark:text-purple-400 dark:hover:text-purple-300 transition-colors duration-200 mb-8">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 transition-transform duration-200 group-hover:-translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Retour à tous les articles
        </a>
        
        <div class="markdown">
            <header class="mb-12">
                <div class="flex flex-wrap gap-2 mb-4">
                    {article.data.tags.map((tag) => (
                    <span class="text-sm px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded-full">
                        {tag}
                    </span>
                    ))}
                </div>

                <h1 class="text-4xl font-bold mb-4">{article.data.title}</h1>

                <div class="flex items-center gap-4 text-gray-600 dark:text-gray-300 mb-6">
                    <span>Par {article.data.author}</span>
                    <span>•</span>
                    <time datetime={article.data.pubDate.toISOString()}>
                    {article.data.pubDate.toLocaleDateString('fr-FR', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    })}
                    </time>
                </div>

                <Image
                    src={article.data.image.src}
                    alt={article.data.image.alt || article.data.title}
                    class="w-full rounded-lg shadow-md mb-8"
                    loading="eager"
                    width={1200}
                    height={630}
                />
            </header>
            
            <div class="max-w-none space-y-6">
                <Content />
            </div>
        </div>
    </article>
</Layout>

<style is:global>
  .markdown h1 {
    font-size: 2.25rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--tw-prose-headings);
  }

  .markdown h2 {
    font-size: 1.875rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .markdown h3 {
    font-size: 1.5rem;
    font-weight: 500;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
  }

  .markdown h4 {
    font-size: 1.25rem;
    font-weight: 500;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
  }

  .markdown p {
    font-size: 1rem;
    line-height: 1.75rem;
    color: var(--tw-prose-body);
  }

  .markdown ul, .markdown ol {
    padding-left: 1.5rem;
    color: var(--tw-prose-body);
  }

  .markdown a {
    color: var(--tw-prose-links);
    text-decoration: underline;
  }
</style>